<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
            integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
        <title>Document</title>
    </head>

    <body>

        <div class="modal fade" id="exampleModalToggle" aria-hidden="true" aria-labelledby="exampleModalToggleLabel"
            tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalToggleLabel">View Todo</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <input type="hidden" id="view_id">
                            <div class="mb-3">
                                <label class="form-label">Task</label>
                                <input type="text" class="form-control" id="view_task">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Status</label>
                                <input type="text" class="form-control" id="view_status">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">deadline</label>
                                <input type="datetime-local" class="form-control" id="view_deadline">
                            </div>

                        </form>
                    </div>
                    <div class="modal-footer">
                        <button onclick="updateTodo()" type="submit" class="btn btn-success"
                            data-bs-dismiss="modal">update</button>
                    </div>
                </div>
            </div>
        </div>

        <h1 class="text-center">Todo List</h1>

        <div class="col-12 row">
            <div class="col-8">
                <h2>Todo List</h2>
                <table class="table table-bordered">
                    <thead class="table-primary">
                        <tr class="text-center text-capitalize">
                            <th>task</th>
                            <th>status</th>
                            <th>deadline</th>
                            <th>actions</th>
                        </tr>
                    </thead>
                    <tbody id="tbody">

                    </tbody>
                </table>
            </div>
            <div class="col-4 mt-5">
                <form>
                    <div class="mb-3">
                        <label class="form-label">Task</label>
                        <input type="text" class="form-control" id="task">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <input type="text" class="form-control" id="status">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">deadline</label>
                        <input type="datetime-local" class="form-control" id="deadline">
                    </div>
                    <button onclick="addData()" type="submit" class="btn btn-success">Add Task</button>
                </form>
            </div>
        </div>


        <script>
            let getData = async () => {
                let tbody = document.getElementById("tbody")
                let result = await fetch("http://localhost:3001/v1/todo/get", {
                    method: "GET",
                })
                let res = await result.json()
                let todo = res.todo
                console.log(todo);

                todo.map((val) => {
                    let tr = document.createElement("tr")
                    tr.className = "text-center text-capitalize";
                    tr.innerHTML =
                        `
                        <td>${val.task}</td>
                        <td>${val.status}</td>
                        <td>${val.deadline}</td>
                        <td><button data-bs-toggle="modal" href="#exampleModalToggle" onclick="viewTodo('${val._id}')" class="btn btn-primary text-capitalize ">edit</button> <button onclick="deleteTask('${val._id}')" class="btn btn-danger text-capitalize" >delete</button></td>
                    `;
                    tbody.appendChild(tr)
                })

            }
            let addData = async () => {
                let data = {
                    task: document.getElementById("task").value,
                    status: document.getElementById("status").value,
                    deadline: document.getElementById("deadline").value
                };

                const response = await fetch("http://localhost:3001/v1/todo/create", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                const res = await response.json();
                console.log(res);
                location.reload()
            };

            let deleteTask = async (id) => {
                console.log(id);

                let result = await fetch(`http://localhost:3001/v1/todo/delete/${id}`, {
                    method: "DELETE"
                })
                let res = await result.json()
                console.log(res);
                location.reload()
            }

            let viewTodo = async (id) => {
                let result = await fetch(`http://localhost:3001/v1/todo/get/${id}`)
                let res = await result.json()
                console.log(res);

                document.getElementById("view_id").value = res.todo._id
                document.getElementById("view_task").value = res.todo.task
                document.getElementById("view_status").value = res.todo.status
                document.getElementById("view_deadline").value = res.todo.deadline

            }

            let updateTodo = async () => {
                let id = document.getElementById("view_id").value

                let data = {
                    task: document.getElementById("view_task").value,
                    status: document.getElementById("view_status").value,
                    deadline: document.getElementById("view_deadline").value
                };
                const response = await fetch(`http://localhost:3001/v1/todo/update/${id}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                const res = await response.json();
                console.log(res);
                location.reload()

            }

            getData()
        </script>
    </body>

</html>